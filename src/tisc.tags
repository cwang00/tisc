AREA_TRIANGLE	../lib/libreria.c	/^#define AREA_TRIANGLE(area, a, b, c)	{\/*Heron's f/
AT_BORDER	../include/types_n_defs.h	/^#define AT_BORDER(i,j)		((i==0) || (i==Ny-1) || (j/
AT_BORDER_1D	../include/types_n_defs.h	/^#define AT_BORDER_1D(i)		((i==0) || (i==Nx-1))$/
Add_Node_To_Lake	surf_proc.c	/^int Add_Node_To_Lake (int row, int col, int i_lake/
Add_Outlet_To_Lake	surf_proc.c	/^int Add_Outlet_To_Lake (int row_sd, int col_sd, in/
Allocate_Memory	tisclib.c	/^int Allocate_Memory()$/
Allocate_Memory_for_external_use	tisclib.c	/^int Allocate_Memory_for_external_use()$/
Attempt_Delete_Node_From_Lake	surf_proc.c	/^int Attempt_Delete_Node_From_Lake (int row, int co/
BOOL	../include/types_n_defs.h	/^typedef enum BOOLEAN	{NO, YES} BOOL;$/
BORDER_INDEX	../include/types_n_defs.h	/^#define BORDER_INDEX(i,j)	(((j)==0)? 3 : ((j)==Nx-/
BORDER_LIMIT	../include/types_n_defs.h	/^#define BORDER_LIMIT(i,j)	DOMAIN_LIMIT(i,j)$/
CS2D	../include/types_n_defs.h	/^struct CS2D {$/
Calculate_2D_Cross_Section	tiscio.c	/^int Calculate_2D_Cross_Section (struct UNIT *Units/
Calculate_2D_Cross_Section_bk	tiscio.c	/^int Calculate_2D_Cross_Section_bk (struct UNIT *Un/
Calculate_Discharge	surf_proc.c	/^int Calculate_Discharge (struct GRIDNODE *sortcell/
Calculate_Precipitation_Evaporation	surf_proc.c	/^int Calculate_Precipitation_Evaporation ()$/
DOMAIN_LIMIT	../include/types_n_defs.h	/^#define DOMAIN_LIMIT(i,j)	{if (i<0) i=0;  if (i>=N/
DOMAIN_LIMIT_1D	../include/types_n_defs.h	/^#define DOMAIN_LIMIT_1D(i)	{if (i<0) i=0;  if (i>N/
DRAINAGE	../include/types_n_defs.h	/^struct DRAINAGE {$/
DRAINAGE_1D	../include/types_n_defs.h	/^struct DRAINAGE_1D {$/
Damn_River_Node	surf_proc.c	/^int Damn_River_Node ($/
Deallocate_Lake	surf_proc.c	/^int Deallocate_Lake (int i_lake)$/
Define_Drainage_Net	surf_proc.c	/^int Define_Drainage_Net (struct GRIDNODE *sortcell/
Define_Lake	surf_proc.c	/^int Define_Lake (int i_lake)$/
Delete_Node_From_Lake	surf_proc.c	/^int Delete_Node_From_Lake (int row, int col)$/
Delete_Unit	tisclib.c	/^int Delete_Unit(int i_unit)$/
Diffusive_Eros	surf_proc.c	/^int Diffusive_Eros (float Kerosdif, float dt, floa/
Direct_mode	tisc.c	/^int Direct_mode(char *load_file_name)$/
Divide_Lake	surf_proc.c	/^int Divide_Lake (int row, int col \/*lake node to /
ET2RIG	../include/geomodel.h	/^#define	ET2RIG(x)	(E*pow(x,3.)\/(12*(1.-nu*nu)))		/
Elastic_Deflection	tisc.c	/^int Elastic_Deflection()$/
Erode	surf_proc.c	/^int Erode (double d_mass, int row, int col) $/
Fluvial_Transport	surf_proc.c	/^int Fluvial_Transport(struct GRIDNODE *sortcell, f/
GET_KREST	../include/tisc.h	/^#define GET_KREST(Krest, q, i, j) { \/*Define the /
GRIDNODE	../include/types_n_defs.h	/^struct GRIDNODE {$/
IF_LAKE_IS_SEA	../include/types_n_defs.h	/^#define IF_LAKE_IS_SEA(il) 	if (il) if (Lake[il].n/
INSIDE_BORDER	../include/types_n_defs.h	/^#define INSIDE_BORDER(i,j)  	IN_DOMAIN(i,j)$/
IN_DOMAIN	../include/types_n_defs.h	/^#define IN_DOMAIN(i,j)		((i>=0) && (i<Ny)    && (j/
IN_DOMAIN_1D	../include/types_n_defs.h	/^#define IN_DOMAIN_1D(i)		((i>=0) && (i<Nx))$/
Ice_EroSed	surf_proc.c	/^int Ice_EroSed(float **ice_velx_sl, float **ice_ve/
Ice_Flow	surf_proc.c	/^int Ice_Flow(float **ice_velx_sl, float **ice_vely/
LAKE_INFO	../include/types_n_defs.h	/^struct LAKE_INFO {		\/*For lakes*\/$/
LAKE_INFO_1D	../include/types_n_defs.h	/^struct LAKE_INFO_1D {		\/*For lakes*\/$/
LIMIT	../include/types_n_defs.h	/^#define LIMIT(x,y,z)	(((x)<(y))? (y) : ((x)>(z))? /
LININTERP	../include/types_n_defs.h	/^#define LININTERP(x, x1,x2, y1,y2)	((x<=x1)? y1 : /
Lake_Fill	surf_proc.c	/^int Lake_Fill ($/
Lake_Input_Discharge	surf_proc.c	/^float Lake_Input_Discharge (int ilake) $/
Lake_Node_Number	surf_proc.c	/^int Lake_Node_Number(int row, int col)$/
Lake_Outlet_Number	surf_proc.c	/^int Lake_Outlet_Number (int row, int col)$/
Landslide_Transport	surf_proc.c	/^int Landslide_Transport (float critical_slope, flo/
MASS2SEDTHICK	surf_proc.c	/^#define MASS2SEDTHICK(mass)	((mass) \/(denssedim-s/
MAX_2	../include/types_n_defs.h	/^#define MAX_2(x,y)	(((x)>(y))? (x) : (y))	\/*Gives/
MIN_2	../include/types_n_defs.h	/^#define MIN_2(x,y)	(((x)<(y))? (x) : (y))	\/*Gives/
Match_Param_Replace_chr	../include/tao+tisc.h	/^#define Match_Param_Replace_chr(x, y, old)  if (!s/
Match_Param_Replace_flt	../include/tao+tisc.h	/^#define Match_Param_Replace_flt(x, y, old)  if (!s/
Match_Param_Replace_int	../include/tao+tisc.h	/^#define Match_Param_Replace_int(x, y, old)  if (!s/
Match_Param_char	../lib/libreria.c	/^#define Match_Param_char(x, y) if (!strcasecmp(str/
Match_Param_char_old	../include/tao+tisc.h	/^#define Match_Param_char_old(x, y) if (!strcasecmp/
Match_Param_flt	../lib/libreria.c	/^#define Match_Param_flt(x, y)  if (!strcasecmp(str/
Match_Param_flt_old	../include/tao+tisc.h	/^#define Match_Param_flt_old(x, y)  if (!strcasecmp/
Match_Param_int	../lib/libreria.c	/^#define Match_Param_int(x, y)  if (!strcasecmp(str/
Match_Param_int_old	../include/tao+tisc.h	/^#define Match_Param_int_old(x, y)  if (!strcasecmp/
Matrix_Info	tisclib.c	/^int Matrix_Info(float **xarxa, 						\/*Matrix.*\//
Mblockxyz	blockxyz.c	/^int main(int argc, char **argv)$/
Mcuthrz	cuthrz.c	/^int main(int argc, char **argv)$/
Minimum_Neg_Slope	surf_proc.c	/^float Minimum_Neg_Slope (int i, int j, int *dr_row/
Minvertfile	invertfile.c	/^int main (int argc, char **argv)$/
Mlonlat2xy	lonlat2xy.c	/^main(int argc, char **argv)$/
Moutin	outin.c	/^main(int argc, char **argv)$/
Mtisc	tisc.c	/^int main(int argc, char **argv)$/
NEIGHBOURS	../include/types_n_defs.h	/^#define NEIGHBOURS(i,j,ni,nj)	(fabs(i-ni) <= 1 && /
NOT_AT_BORDER	../include/types_n_defs.h	/^#define NOT_AT_BORDER(i,j)	((i>0)  && (i<Ny-1)  &&/
NOT_AT_BORDER_1D	../include/types_n_defs.h	/^#define NOT_AT_BORDER_1D(i)	((i>0)  && (i<Nx-1))$/
NOT_OUT_BORDER	../include/types_n_defs.h	/^#define NOT_OUT_BORDER(i,j)  	IN_DOMAIN(i,j)$/
New_Lake	surf_proc.c	/^int New_Lake ()$/
OUT_BORDER	../include/types_n_defs.h	/^#define OUT_BORDER(i,j) 	OUT_DOMAIN(i,j)$/
OUT_DOMAIN	../include/types_n_defs.h	/^#define OUT_DOMAIN(i,j) 	((i<0)  || (i>=Ny)   || (/
OUT_DOMAIN_1D	../include/types_n_defs.h	/^#define OUT_DOMAIN_1D(i)	((i<0)  || (i>=Nx))$/
Orographic_Precipitation_Evaporation_conservative	surf_proc.c	/^int Orographic_Precipitation_Evaporation_conservat/
Orographic_Precipitation_with_local_slope	surf_proc.c	/^float Orographic_Precipitation_with_local_slope (i/
PRINT_DEBUG	../include/types_n_defs.h	/^#define PRINT_DEBUG(...)	{if (verbose_level>=4) {f/
PRINT_DEBUGPLUS	../include/types_n_defs.h	/^#define PRINT_DEBUGPLUS(...)	{if (verbose_level>=5/
PRINT_ERROR	../include/types_n_defs.h	/^#define PRINT_ERROR(...)	{if (verbose_level>=0) {f/
PRINT_GRID_INFO	../include/types_n_defs.h	/^#define PRINT_GRID_INFO(grid, name, units) {\\$/
PRINT_INFO	../include/types_n_defs.h	/^#define PRINT_INFO(...) 	{if (verbose_level>=2) {f/
PRINT_SUMLINE	../include/types_n_defs.h	/^#define PRINT_SUMLINE(...)	{if (verbose_level>=1) /
PRINT_WARNING	../include/types_n_defs.h	/^#define PRINT_WARNING(...)	{if (verbose_level>=3) /
Perfil_info	tisclib.c	/^int Perfil_info(float *perfil, int n, float *max, /
Precipitation_Evaporation_at_cell	surf_proc.c	/^int Precipitation_Evaporation_at_cell (int i, int /
RIG2ET	../include/geomodel.h	/^#define	RIG2ET(x)	(pow((x)\/E*12.*(1.-nu*nu), 1.\//
ReSort_Array	../lib/libreria.c	/^float ReSort_Array (float *array, int *orden, int /
ReSort_Matrix	tisclib.c	/^float ReSort_Matrix (float **matrix, struct GRIDNO/
Read_Header_File	../include/tao+tisc.h	/^#define Read_Header_File(file) {\\$/
Read_Open_Filename_Return	../include/tao+tisc.h	/^#define Read_Open_Filename_Return(ext,type,txt) {/
RepareUnits	tisclib.c	/^int RepareUnits()$/
Rise_Damn_Node	surf_proc.c	/^int Rise_Damn_Node ($/
SIGN	../include/types_n_defs.h	/^#define SIGN(x)		(((x)<0)? (-1) : (((x)>0)? (+1) :/
SQUARE	../include/types_n_defs.h	/^#define SQUARE(x)	((x)*(x))$/
Sediment	surf_proc.c	/^int Sediment (double d_mass, int row, int col) $/
SolveAlmostDiagonalTriangularEquationSystem	../lib/libreria.c	/^int SolveAlmostDiagonalTriangularEquationSystem ($/
Sort_Matrix	tisclib.c	/^float Sort_Matrix (float **matrix, struct GRIDNODE/
Surface_Transport	surf_proc.c	/^int Surface_Transport (float **topo, float **topo_/
TAKE_LINE_1	../include/types_n_defs.h	/^#define TAKE_LINE_1(x)		{ char auxstr[MAXLENLINE],/
TAKE_LINE_2	../include/types_n_defs.h	/^#define TAKE_LINE_2(x, y)	{ char auxstr[MAXLENLINE/
TAKE_LINE_3	../include/types_n_defs.h	/^#define TAKE_LINE_3(x, y, z)	{ char auxstr[MAXLENL/
TAKE_LINE_4	../include/types_n_defs.h	/^#define TAKE_LINE_4(x, y, z, t)	{ char auxstr[MAXL/
TEMPERATURE	../include/types_n_defs.h	/^#define TEMPERATURE(altitude)	(temp_sea_level - GA/
TEMPERATURE_AIR	../include/types_n_defs.h	/^#define TEMPERATURE_AIR(topo,height)	(TEMPERATURE_/
TEMPERATURE_GROUND	../include/types_n_defs.h	/^#define TEMPERATURE_GROUND(topo)	(temp_sea_level -/
TEMPERATURE_ICE	../include/types_n_defs.h	/^#define TEMPERATURE_ICE(altitude)	(temp_sea_level /
THICK2SEDMASS	surf_proc.c	/^#define THICK2SEDMASS(thick)	((thick)*(denssedim-s/
The_End	tisc.c	/^int The_End()$/
TriangularizeAlmostDiagonalEquationSystem	../lib/libreria.c	/^int TriangularizeAlmostDiagonalEquationSystem($/
UNIT	../include/types_n_defs.h	/^struct UNIT { 		\/*for TISC*\/$/
UNIT_1D	../include/types_n_defs.h	/^struct UNIT_1D {	\/*for tAo*\/$/
Unify_Lakes	surf_proc.c	/^int Unify_Lakes (int i_lake, int i_lake_to_delete)/
VERTANOMCONTRIB	../lib/libreria.c	/^#define VERTANOMCONTRIB(s,x,y,z) {\\$/
Viscous_Relaxation	tisc.c	/^int Viscous_Relaxation()$/
WriteAlmostDiagonalMatrix	../lib/libreria.c	/^int WriteAlmostDiagonalMatrix (double **A, double /
Write_Open_Filename_Return	../include/tao+tisc.h	/^#define Write_Open_Filename_Return(ext,type,retcon/
Write_Ouput	tisc.c	/^int Write_Ouput()$/
alloc_array	../lib/libreria.c	/^float *alloc_array (int n)$/
alloc_array_dbl	../lib/libreria.c	/^double *alloc_array_dbl (int n)$/
alloc_matrix	../lib/libreria.c	/^float **alloc_matrix (int n_fil, int n_col)$/
alloc_matrix_dbl	../lib/libreria.c	/^double **alloc_matrix_dbl (int n_fil, int n_col)$/
alloc_matrix_int	../lib/libreria.c	/^int **alloc_matrix_int (int n_fil, int n_col)$/
anombloq	../lib/libreria.c	/^float anombloq(register float x1, register float x/
calculate_sea_level	tisclib.c	/^float calculate_sea_level()$/
calculate_topo	tisclib.c	/^int calculate_topo(float **topo_new)$/
call_flexure_	call_tisc.c	/^int call_flexure_ ($/
call_surf_proc_	call_tisc.c	/^int call_surf_proc_ ($/
constant_rate_eros	surf_proc.c	/^int constant_rate_eros ($/
defineLESalmostdiagonalmatrix	tisclib.c	/^int defineLESalmostdiagonalmatrix (double **A, dou/
defineLESmatrix_for_mathlib	tisclib.c	/^int defineLESmatrix_for_mathlib (float *A, int *IA/
diffusion_2D	../lib/libreria.c	/^int diffusion_2D(float **Matrix, float **d_Matrix,/
distVincenty	../lib/libreria.c	/^float distVincenty(float lat1, float lon1, float l/
dist_2D	../lib/libreria.c	/^float dist_2D($/
dist_xy_line	../lib/libreria.c	/^float dist_xy_line($/
dist_xy_pol	../lib/libreria.c	/^float dist_xy_pol($/
dist_xy_segment	../lib/libreria.c	/^float dist_xy_segment($/
evaluate_xy_points	../lib/libreria.c	/^float evaluate_xy_points($/
find_up_river	tiscio.c	/^int find_up_river (int row, int col, int *level, i/
for	test.c	/^	for (i=0; i<Lake[ild].n; i++) {$/
free_matrix	../lib/libreria.c	/^int free_matrix (float **matrix, int n_fil)$/
free_matrix_dbl	../lib/libreria.c	/^int free_matrix_dbl (double **matrix, int n_fil)$/
free_matrix_int	../lib/libreria.c	/^int free_matrix_int (int **matrix, int n_fil)$/
geoidanompolyg	../lib/libreria.c	/^float geoidanompolyg($/
gradual_unit	tisclib.c	/^int gradual_unit()$/
gravanompolyg	../lib/libreria.c	/^float gravanompolyg($/
init_tisc_	call_tisc.c	/^int init_tisc_ ($/
inputs	tisc.c	/^int inputs (int argc, char **argv)$/
insert_new_unit	tisclib.c	/^int insert_new_unit(int num_new_unit)$/
interpol2D	../lib/libreria.c	/^int interpol2D ($/
interpol_in_xy_data	../lib/libreria.c	/^float interpol_in_xy_data ($/
interpol_point_in_mesh	../lib/libreria.c	/^float interpol_point_in_mesh ($/
interpr_command_line_opts	tisc.c	/^int interpr_command_line_opts(int argc, char **arg/
match_parameter	tisclib.c	/^int match_parameter (char *str1, char *str2, int s/
max_water_in_air_colum	surf_proc.c	/^float max_water_in_air_colum (int i, int j)$/
move_unit	tisc.c	/^int move_unit()$/
outin	../lib/libreria.c	/^int outin($/
polygon_area	../lib/libreria.c	/^float polygon_area($/
prism_vertical_atraction	../lib/libreria.c	/^double prism_vertical_atraction ($/
project_xy_line	../lib/libreria.c	/^float project_xy_line($/
project_xy_segment	../lib/libreria.c	/^float project_xy_segment($/
read_file_2D_CS	tiscio.c	/^int read_file_2D_CS (struct UNIT *Units, struct CS/
read_file_Te	tiscio.c	/^int read_file_Te()$/
read_file_horiz_record_time	tiscio.c	/^int read_file_horiz_record_time()$/
read_file_initial_deflection	tiscio.c	/^int read_file_initial_deflection (float **w)$/
read_file_initial_rivers	tiscio.c	/^int read_file_initial_rivers()$/
read_file_initial_topo	tiscio.c	/^int read_file_initial_topo(float **h)$/
read_file_node_defs	tiscio.c	/^int read_file_node_defs(float dt_st)$/
read_file_output_units	tiscio.c	/^int read_file_output_units ()$/
read_file_parameters	tiscio.c	/^int read_file_parameters (int show, int reformat) /
read_file_rain	tiscio.c	/^int read_file_rain(float **precipitation_file)$/
read_file_resume	tiscio.c	/^int read_file_resume(char *filename)$/
read_file_sea_level	tiscio.c	/^int read_file_sea_level()$/
read_file_unit	tisc.c	/^int read_file_unit()$/
readinterp2D	../lib/libreria.c	/^int readinterp2D ($/
readinterplin	../lib/libreria.c	/^int readinterplin ($/
reformat_file_thin_sheet_BC	tiscio.c	/^int reformat_file_thin_sheet_BC(char *tmpTSBCfilen/
replace_word	../lib/libreria.c	/^char *replace_word(char *s, char *old, char *new)$/
sheet	../lib/thin_sheet.f	/^CC   -The velocity field of a thin sheet (subrouti/
sistecslintriang	../lib/libreria.c	/^void sistecslintriang(float **a, float *b, int nx,/
solveLESalmostdiagonal	tisclib.c	/^int solveLESalmostdiagonal (double **A, double *b,/
surface_processes	tisc.c	/^int surface_processes (float **topo_ant)$/
surface_topo	../lib/libreria.c	/^double surface_topo($/
syntax	blockxyz.c	/^syntax(int argc, char **argv)$/
tectload	tisc.c	/^int tectload()$/
triangularizar	../lib/libreria.c	/^int triangularizar(float **a, float *b, int nx)$/
water_load	tisclib.c	/^int water_load()$/
write_file_Units	tiscio.c	/^int write_file_Units ()$/
write_file_cross_section	tiscio.c	/^int write_file_cross_section ()$/
write_file_cross_section_bk	tiscio.c	/^int write_file_cross_section_bk ()$/
write_file_drainage	tiscio.c	/^int write_file_drainage ()$/
write_file_ice	tiscio.c	/^int write_file_ice ()$/
write_file_lakes	tiscio.c	/^int write_file_lakes ()$/
write_file_resume	tiscio.c	/^int write_file_resume()$/
write_file_river_basins	tiscio.c	/^int write_file_river_basins ()$/
write_file_surftransp	tiscio.c	/^int write_file_surftransp ()$/
write_file_time	tiscio.c	/^int write_file_time (float **xarxa1, float **xarxa/
write_file_velocity_field	tiscio.c	/^int write_file_velocity_field ()$/
